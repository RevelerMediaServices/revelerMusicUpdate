{"version":3,"file":"static/webpack/static\\development\\pages\\contactInfo.js.5296dcaa46c668b54371.hot-update.js","sources":["webpack:///./components/RevelerContact.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nimport { db } from \"../Firebase\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Container,\r\n  Button\r\n} from \"reactstrap\";\r\n\r\nconst RevelerContactDiv = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  transform: translate(-50%, 0%);\r\n\r\n  -webkit-box-shadow: 0 0 1vw rgba(154, 154, 154, 1);\r\n  -moz-box-shadow: 0 0 1vw rgba(154, 154, 154, 1);\r\n  box-shadow: 0 0 1vw rgba(154, 154, 154, 1);\r\n  width: 75vw;\r\n  background-color: black;\r\n  border: solid 0.01vw rgba(0, 0, 100, 1);\r\n\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  .contactFormPageHeader {\r\n    color: white;\r\n    text-align: center;\r\n    font-size: 3vw;\r\n    font-family: \"PT Sans\", sans-serif;\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      font-size: 6vw;\r\n    }\r\n\r\n    @media only screen and (max-width: 1200px) and (min-width: 767px) {\r\n      font-size: 6vw;\r\n    }\r\n  }\r\n\r\n  .newContactFormContainerDiv {\r\n    text-align: center;\r\n    color: white;\r\n    font-family: \"PT Sans\", sans-serif;\r\n    font-size: 2vw;\r\n\r\n    @media only screen and (max-width: 1200px) and (min-width: 767px) {\r\n      font-size: 2.5vw;\r\n    }\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      font-size: 6.5vw;\r\n    }\r\n  }\r\n\r\n  .asLabel {\r\n    padding-top: 0.5vh;\r\n  }\r\n\r\n  .newContactFormButtonDiv {\r\n    padding-top: 2vh;\r\n    padding-bottom: 2vh;\r\n  }\r\n\r\n  .contactCards {\r\n    background-color: transparent;\r\n    margin-left: 5%;\r\n    margin-right: 10%;\r\n    margin-top: 2vh;\r\n    background-color: rgb(26, 26, 28, 1);\r\n\r\n    @media only screen and (max-width: 1200px) and (min-width: 767px) {\r\n      margin-left: 5%;\r\n      margin-right: 10%;\r\n    }\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      margin-left: 5%;\r\n      margin-right: 5%;\r\n    }\r\n  }\r\n\r\n  .contactCardsWords {\r\n    font-family: \"PT Sans\", sans-serif;\r\n    font-size: 1vw;\r\n\r\n    @media only screen and (max-width: 1200px) and (min-width: 767px) {\r\n      font-size: 1.5vw;\r\n    }\r\n\r\n    @media only screen and (max-width: 767px) {\r\n      font-size: 3vw;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction RevelerContact() {\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lNameCompanyName, setLNameCompanyName] = useState(\"\");\r\n  const [dateOfEvent, setDateOfEvent] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [bestTimeToCall, setBestTimeToCall] = useState(\"\");\r\n  const [emailAddress, setEmailAdress] = useState(\"\");\r\n  const [zipCodeOfVenue, setZipCodeOfVenue] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onSubmit = useCallback(e => {\r\n    e.preventDefault();\r\n    const newFormRef = db.ref(\"ContactForms\");\r\n    const form = {\r\n      fName,\r\n      lNameCompanyName,\r\n      dateOfEvent,\r\n      phoneNumber,\r\n      bestTimeToCall,\r\n      emailAddress,\r\n      zipCodeOfVenue,\r\n      message\r\n    };\r\n    newFormRef.push(form);\r\n    setFName(\"\");\r\n    setLNameCompanyName(\"\");\r\n    setDateOfEvent(\"\");\r\n    setPhoneNumber(\"\");\r\n    setBestTimeToCall(\"\");\r\n    setEmailAdress(\"\");\r\n    setZipCodeOfVenue(\"\");\r\n    setMessage(\"\");\r\n  });\r\n\r\n  return (\r\n    <RevelerContactDiv>\r\n      <div className=\"contactFormPageHeader\">Contact Reveler Music</div>\r\n      <Row>\r\n        <Col xl=\"8\" md=\"6\" xs=\"12\">\r\n          <Form onSubmit={onSubmit}>\r\n            <Container className=\"newContactFormContainerDiv\">\r\n              <Row>\r\n                <Col xl=\"6\" md=\"12\">\r\n                  <Label for=\"fname\" className=\"asLabel\">\r\n                    First Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"fname\"\r\n                    placeholder=\"Fist Name\"\r\n                    id=\"fname\"\r\n                    onChange={e => setFName(e.target.value)}\r\n                    value={fName}\r\n                    className=\"asInput\"\r\n                  />\r\n                </Col>\r\n                <Col xl=\"6\" md=\"12\">\r\n                  <Label for=\"lNameCompanyName\" className=\"asLabel\">\r\n                    Last/Company Name\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"lNameCompanyName\"\r\n                    placeholder=\"Last Name or Company Name\"\r\n                    id=\"lNameCompanyName\"\r\n                    onChange={e => setLNameCompanyName(e.target.value)}\r\n                    value={lNameCompanyName}\r\n                    className=\"asInput\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xl=\"6\" md=\"12\">\r\n                  <Label for=\"dateOfEvent\" className=\"asLabel\">\r\n                    Date of Event\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"dateOfEvent\"\r\n                    placeholder=\"Date of Event\"\r\n                    id=\"dateOfEvent\"\r\n                    onChange={e => setDateOfEvent(e.target.value)}\r\n                    value={dateOfEvent}\r\n                    className=\"asInput\"\r\n                  />\r\n                </Col>\r\n                <Col xl=\"6\" md=\"12\">\r\n                  <Label for=\"phoneNumber\" className=\"asLabel\">\r\n                    Phone Number\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"phoneNumber\"\r\n                    placeholder=\"Phone Number\"\r\n                    id=\"phoneNumber\"\r\n                    onChange={e => setPhoneNumber(e.target.value)}\r\n                    value={phoneNumber}\r\n                    className=\"asInput\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xl=\"6\" md=\"12\">\r\n                  <Label for=\"bestTimeToCall\" className=\"asLabel\">\r\n                    Best Time to Call\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"bestTimeToCall\"\r\n                    placeholder=\"Best Time to Call\"\r\n                    id=\"bestTimeToCall\"\r\n                    onChange={e => setBestTimeToCall(e.target.value)}\r\n                    value={bestTimeToCall}\r\n                    className=\"asInput\"\r\n                  />\r\n                </Col>\r\n                <Col xl=\"6\" md=\"12\">\r\n                  <Label for=\"emailAddress\" className=\"asLabel\">\r\n                    Email Address\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"emailAddress\"\r\n                    placeholder=\"Email Address\"\r\n                    id=\"emailAddress\"\r\n                    onChange={e => setEmailAdress(e.target.value)}\r\n                    value={emailAddress}\r\n                    className=\"asInput\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Label for=\"message\" className=\"asLabel\">\r\n                    Message\r\n                  </Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    name=\"message\"\r\n                    placeholder=\"Message\"\r\n                    id=\"message\"\r\n                    onChange={e => setMessage(e.target.value)}\r\n                    value={message}\r\n                    className=\"asInput\"\r\n                    rows=\"5\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <div className=\"newContactFormButtonDiv\">\r\n                <Button type=\"submit\">Send Message</Button>\r\n              </div>\r\n            </Container>\r\n          </Form>\r\n        </Col>\r\n        <Col xl=\"4\" md=\"6\" xs=\"12\" id=\"MainColumn2\">\r\n          <div>\r\n            <Card className=\"contactCards\" body inverse>\r\n              <div className=\"contactCardsWords\">\r\n                Colorado Springs - Pueblo\r\n                <br />\r\n                (719) 439-7950\r\n              </div>\r\n            </Card>\r\n\r\n            <Card className=\"contactCards\" body inverse>\r\n              <div className=\"contactCardsWords\">\r\n                Denver - Castle Rock\r\n                <br />\r\n                (720) 306-1354\r\n              </div>\r\n            </Card>\r\n            <Card className=\"contactCards\" body inverse>\r\n              <div className=\"contactCardsWords\">Other Contacts</div>\r\n              <div className=\"contactCardsWords\">\r\n                Email - contact@revelermusic.com\r\n                <br />\r\n                Facebook - @revelermusicllc\r\n                <br />\r\n                Instagram - @revelermusicllc\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </RevelerContactDiv>\r\n  );\r\n}\r\n\r\nexport default RevelerContact;\r\n"],"mappings":"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","sourceRoot":""}